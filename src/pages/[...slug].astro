---
// Import our Strapi helpers, the main Layout, and our new ComponentMapper
import { getAllPageSlugs, getPageBySlug, getSiteSettings } from '../utils/strapi.js';
import Layout from '../layouts/Layout.astro';
import ComponentMapper from '../components/ComponentMapper.astro';

// This function runs at build time to discover all page routes from Strapi
export async function getStaticPaths() {
  return await getAllPageSlugs();
}

// Get the slug for the current page
const { slug } = Astro.params;

// Fetch both the page data AND the site settings at the same time
const [pageData, siteSettings] = await Promise.all([
  getPageBySlug(slug),
  getSiteSettings()
]);

// Handle case where page is not found
if (!pageData) {
  return new Response(null, { status: 404, statusText: 'Not Found' });
}

// The actual page content is nested in the 'attributes' object in Strapi v4/v5
const page = pageData;

// Extract the array of components from our "page_builder" Dynamic Zone
const pageBuilderComponents = page.page_builder;
---

<!-- Use the main Layout component to wrap our page for consistent header/footer -->
<Layout page={page} siteSettings={siteSettings}>
  <main>
    {/* 
      Check if the page_builder array exists and has components.
      If it does, we map over each component ('blok') and render it
      using our ComponentMapper. This is the core of our dynamic page builder.
    */}
    {pageBuilderComponents && pageBuilderComponents.length > 0 ? (
      pageBuilderComponents.map(blok => <ComponentMapper blok={blok} />)
    ) : (
      <!-- Show a message if the page is empty in the CMS -->
      <div class="container mx-auto py-24 text-center">
        <p>This page has no content components yet.</p>
      </div>
    )}
  </main>
</Layout>
